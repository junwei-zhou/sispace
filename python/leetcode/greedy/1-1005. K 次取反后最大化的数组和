1005. K 次取反后最大化的数组和
给定一个整数数组 A，我们只能用以下方法修改该数组：我们选择某个索引 i 并将 A[i] 替换为 -A[i]，然后总共重复这个过程 K 次。（我们可以多次选择同一个索引 i。）

以这种方式修改数组后，返回数组可能的最大和。

 

示例 1：

输入：A = [4,2,3], K = 1
输出：5
解释：选择索引 (1,) ，然后 A 变为 [4,-2,3]。

class Solution:
    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:
        A,length=sorted(A),len(A)
        for i,j in zip(range(length),range(K)):
            if A[i]<0:A[i]=-A[i]
            else:break #中途跳出，说明列表中负数的数量要<K且必有非负数
        else:
            if j>=K-1:#正常遍历完毕---K用完了，列表可能遍历完了也可能没有，又说明列表中负数的数量要>=K
                return sum(A)
            else:return sum(A) if (K-1-j)%2==0 else sum(A)-2*A[-1]#正常遍历完毕---K没用完,说明列表遍历完了，又说明列表全是负数
                
        return sum(A) if (K-j)%2==0 else sum(A)-2*min(A,key=abs)

