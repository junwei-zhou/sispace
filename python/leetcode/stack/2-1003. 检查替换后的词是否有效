1003. 检查替换后的词是否有效
给定有效字符串 "abc"。

对于任何有效的字符串 V，我们可以将 V 分成两个部分 X 和 Y，使得 X + Y（X 与 Y 连接）等于 V。（X 或 Y 可以为空。）那么，X + "abc" + Y 也同样是有效的。

例如，如果 S = "abc"，则有效字符串的示例是："abc"，"aabcbc"，"abcabc"，"abcabcababcc"。无效字符串的示例是："abccba"，"ab"，"cababc"，"bac"。

如果给定字符串 S 有效，则返回 true；否则，返回 false。

 

示例 1：

输入："aabcbc"
输出：true
解释：
从有效字符串 "abc" 开始。
然后我们可以在 "a" 和 "bc" 之间插入另一个 "abc"，产生 "a" + "abc" + "bc"，即 "aabcbc"。
示例 3：

输入："abccba"
输出：false



class Solution:
    def isValid(self, S: str) -> bool:
        while 'abc' in S:
            S = S.replace("abc","")
        return S == ''


class Solution:
    def isValid(self, S: str) -> bool:
        stack = []
        for i in S:
            if i != 'c': stack.append(i)
            else:
                if len(stack) >= 2:
                    if stack.pop() == 'b' and stack.pop() == 'a':
                        continue
                    else: return False
                else:
                    return False

        return True if not stack else False  # 如果匹配，则此时栈应为空
        


