921. 使括号有效的最少添加
给定一个由 '(' 和 ')' 括号组成的字符串 S，我们需要添加最少的括号（ '(' 或是 ')'，可以在任何位置），以使得到的括号字符串有效。

从形式上讲，只有满足下面几点之一，括号字符串才是有效的：

它是一个空字符串，或者
它可以被写成 AB （A 与 B 连接）, 其中 A 和 B 都是有效字符串，或者
它可以被写作 (A)，其中 A 是有效字符串。
给定一个括号字符串，返回为使结果字符串有效而必须添加的最少括号数。

 

示例 1：

输入："())"
输出：1
示例 2：

输入："((("
输出：3

class Solution:
    def minAddToMakeValid(self, S: str) -> int:
        ans = 0 
        count = 0
        for i in S:
            if i == '(':
                ans += 1
            else:
                ans -= 1
                #处理右边》左边的实例。将右边多出的记录先来。
            if ans < 0:
                count += 1
                ans += 1
        count += ans
        return count

class Solution:
    def minAddToMakeValid(self, S: str) -> int:
        i = 0
        while True:
            S = S.replace("()",'')
            S_len = len(S)
            if i != S_len:
                i = S_len
            else:
                break
        return i



class Solution(object):
    def minAddToMakeValid(self, S):
        """
        :type S: str
        :rtype: int
        """
        myStack = []
        res = 0
        for item in S:
            if item == ')':
                if myStack and myStack[-1] == '(':
                    myStack.pop()
                else:
                    res += 1
            else:
                myStack.append(item)
        res += len(myStack)
        return res
