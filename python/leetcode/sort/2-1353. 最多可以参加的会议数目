1353. 最多可以参加的会议数目
给你一个数组 events，其中 events[i] = [startDayi, endDayi] ，表示会议 i 开始于 startDayi ，结束于 endDayi 。

你可以在满足 startDayi <= d <= endDayi 中的任意一天 d 参加会议 i 。注意，一天只能参加一个会议。

请你返回你可以参加的 最大 会议数目

输入：events = [[1,2],[2,3],[3,4]]
输出：3
解释：你可以参加所有的三个会议。
安排会议的一种方案如上图。
第 1 天参加第一个会议。
第 2 天参加第二个会议。
第 3 天参加第三个会议。
示例 2：

输入：events= [[1,2],[2,3],[3,4],[1,2]]
输出：4


【重点：去理解贪心算法与优先队列的实现案例】

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-number-of-events-that-can-be-attended
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution:
    def maxEvents(self, events: List[List[int]]) -> int:
        res = 0
        heapq.heapify(events) # 把events转化成堆结构
        cur = events[0][0]
        while events:
            s, e = heapq.heappop(events)
            # print([s,e])
            if e < cur: # 如果结束时间小于当前天，说明过期了，不能参加
                continue
            # 如果开始时间小于当天，我们也不必今天参加，可以在（当天，结束天）任何一天参加
            if s < cur: 
                heapq.heappush(events,[cur,e])
            else:
                cur = max(cur + 1,s + 1)
                res += 1
        return res 


