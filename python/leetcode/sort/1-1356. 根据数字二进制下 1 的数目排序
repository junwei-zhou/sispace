1356. 根据数字二进制下 1 的数目排序
给你一个整数数组 arr 。请你将数组中的元素按照其二进制表示中数字 1 的数目升序排序。

如果存在多个数字二进制中 1 的数目相同，则必须将它们按照数值大小升序排列。

请你返回排序后的数组。

 

示例 1：

输入：arr = [0,1,2,3,4,5,6,7,8]
输出：[0,1,2,4,8,3,5,6,7]
解释：[0] 是唯一一个有 0 个 1 的数。
[1,2,4,8] 都有 1 个 1 。
[3,5,6] 有 2 个 1 。
[7] 有 3 个 1 。
按照 1 的个数排序得到的结果数组为 [0,1,2,4,8,3,5,6,7]

class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
        return sorted(arr, key=lambda x: (bin(x).count('1'),x))


class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
         # 转二进制：按1的个数排序
        # 1的个数相同时，按数值排序
        dic = {}   # 字典的key是1的个数，value是对应的数字
        for item in arr:
            ones = str(bin(item)).count('1')
            if ones not in dic:
                dic[ones] = []
            dic[ones].append(item)
        res = []
        for item in sorted(dic):   # sorted(dic)默认按找key排序
            res += sorted(dic[item])    # 再按照数字大小排序
        return res
           






class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
        return sorted(arr, key=lambda x: (bin(x).count('1'),x))


