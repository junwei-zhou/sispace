876. 链表的中间结点
给定一个带有头结点 head 的非空单链表，返回链表的中间结点。

如果有两个中间结点，则返回第二个中间结点。
示例 1：

输入：[1,2,3,4,5]
输出：此列表中的结点 3 (序列化形式：[3,4,5])
返回的结点值为 3 。 (测评系统对该结点序列化表述是 [3,4,5])。
注意，我们返回了一个 ListNode 类型的对象 ans，这样：
ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, 以及 ans.next.next.next = NULL.



# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def middleNode(self, head: ListNode) -> ListNode:
#  顺序遍历
#         cur = head
#         length = 0
#         while(cur):
#             length += 1
#             cur = cur.next
        
#         if length%2 == 0:
#             mid = length/2 + 1
#         else:
#             mid = math.ceil(length / 2)
#         mid -= 1
#         cur = head
#         while(mid):
#             cur = cur.next
#             mid -= 1
        
#         return cur 

#  快慢指针
        fast, slow = head, head
        while(fast and fast.next):
            fast = fast.next.next
            slow = slow.next
        
        return slow


