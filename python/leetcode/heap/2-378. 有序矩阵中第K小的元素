378. 有序矩阵中第K小的元素
给定一个 n x n 矩阵，其中每行和每列元素均按升序排序，找到矩阵中第 k 小的元素。
请注意，它是排序后的第 k 小元素，而不是第 k 个不同的元素。

 

示例：

matrix = [
   [ 1,  5,  9],
   [10, 11, 13],
   [12, 13, 15]
],
k = 8,

返回 13。
class Solution(object):
    def kthSmallest(self, matrix, k):
        n = len(matrix)
        if n < 1:
            return
        m = len(matrix[0])

        import heapq
        heap = []
        for i in range(n):
            for j in range(m):
                heapq.heappush(heap, -matrix[i][j])
                if len(heap) > k:
                    heapq.heappop(heap)
        return -heap[0]


class Solution:
    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:
        m = len(matrix)
        n = len(matrix[0])

        # count 
        def analyze(mid):
            count = 0
            y = m - 1
            x = 0
            while y >= 0 and x < n:
                if matrix[x][y] <= mid:
                    count += y + 1
                    x += 1
                else:
                    y -= 1
            return count
        
        # binary search
        left = matrix[0][0]
        right = matrix[-1][-1]
        while left <= right:
            mid = left + (right - left) // 2
            count = analyze(mid)

            if count < k:
                left = mid + 1
            else:
                right = mid - 1
            
        return left

