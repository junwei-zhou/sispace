409. 最长回文串
给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。

在构造过程中，请注意区分大小写。比如 "Aa" 不能当做一个回文字符串。

注意:
假设字符串的长度不会超过 1010。

示例 1:

输入:
"abccccdd"

输出:
7

解释:
我们可以构造的最长的回文串是"dccaccd", 它的长度是 7。


只要哈希表中的值出现次数为偶数，就可以成为最长回文串的一部分；
如果是奇数，次数减一也可以成为最长回文串的一部分；
第一次出现的奇数可以不用减一，放在最长回文串的中间。

代码

class Solution:
    def longestPalindrome(self, s: str) -> int:
        #统计字符的数量
        d=collections.Counter(s)
        res=0
        #看有没有出现奇数
        odd=0
        #d内的字符
        for i in d:
            #d内统计好的字符数
            if d[i]%2==0:
                res+=d[i]
            elif d[i]%2==1:
                odd=1
                res+=d[i]-1
        return res+1 if odd else res


